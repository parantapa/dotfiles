#!/usr/bin/env python
"""Create tags from filenames and index terms in ReStructured Text files."""

import os
from glob import glob
from pathlib import Path

import click


def get_index_lines(fin):
    """Return the '.. index::' lines from the file object."""
    lines = []
    for line in fin:
        line = " ".join(line.strip().split())
        if line.startswith(".. index::"):
            lines.append(line)
    return lines


def get_index_terms(line):
    """Return the index terms from a '.. index::' line."""
    terms = line.split()
    terms = terms[2:]
    terms = [t.strip(",") for t in terms]
    return terms


def make_tags_fname(fname):
    """Make the tags for a given file."""
    ret = []
    fname = Path(fname)
    ret.append(f"{fname.stem}\t{fname}\t1\n")
    with open(fname, "rt", encoding="utf-8") as fin:
        lines = get_index_lines(fin)
        for line in lines:
            terms = get_index_terms(line)
            for term in terms:
                ret.append(f"{term}\t{fname}\t/{term}/\n")
    return set(ret)


def make_tags(fnames):
    """Return the list of lines for the given filenams."""
    ret = []
    for fname in fnames:
        ret.extend(make_tags_fname(fname))

    ret.sort()
    ret = ["!_TAG_FILE_SORTED\t1\n", "!_TAG_FILE_ENCODING\tutf-8\n"] + ret

    return ret


@click.command()
@click.option(
    "-C",
    "--chdir",
    "workdir",
    default=None,
    type=click.Path(),
    help="If provided switch to this directory first.",
)
@click.option(
    "-o",
    "--output",
    "ofname",
    default="tags",
    show_default=True,
    help="The file to which the tags will be written.",
)
@click.option(
    "-g",
    "--glob",
    "is_glob",
    is_flag=True,
    help="If true the input files are assumed to be glob file patterns.",
)
@click.option(
    "-f",
    "--find",
    "do_find",
    is_flag=True,
    help="If true search for files with .rst extensions.",
)
@click.argument("ifnames", metavar="INPUT", nargs=-1)
def main(workdir, ofname, is_glob, do_find, ifnames):
    """Create tags from filenames and index terms in ReStructured Text files."""
    if workdir is not None:
        os.chdir(workdir)

    real_ifnames = []
    if is_glob:
        for ifname in ifnames:
            real_ifnames.extend(glob(ifname))
    else:
        real_ifnames.extend(ifnames)

    if do_find:
        for root, _, fnames in os.walk("."):
            for fname in fnames:
                print(os.path.join(root, fname))
                if fname.endswith(".rst"):
                    real_ifnames.append(os.path.join(root, fname))

    real_ifnames = sorted(set(real_ifnames))

    lines = make_tags(real_ifnames)

    with open(ofname, "wt", encoding="utf-8") as fout:
        for line in lines:
            fout.write(line)


if __name__ == "__main__":
    main()
