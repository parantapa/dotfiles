#!/usr/bin/env python2
# encoding: utf-8
"""
Type out the contents of clipboard.

Uses xdotool and xsel
"""

from __future__ import division, print_function, unicode_literals

__author__ = "Parantapa Bhattachara <pb [at] parantapa [dot] net>"

import sys
from subprocess import Popen, PIPE

# The following is the keysym to printing character pairs
# for the latin1 character set.
#
# The codes have been taken from
# /usr/include/X11/keysymdef.h
#
# /*
#  * Latin 1
#  * (ISO/IEC 8859-1 = Unicode U+0020..U+00FF)
#  * Byte 3 = 0
#  */

KEYSYM_CHARS = (
    # Added these to common chacracters
    ("Tab",                           "\t"),
    ("Return",                        "\n"),

    ("space",                         "\u0020"),
    ("exclam",                        "\u0021"),
    ("quotedbl",                      "\u0022"),
    ("numbersign",                    "\u0023"),
    ("dollar",                        "\u0024"),
    ("percent",                       "\u0025"),
    ("ampersand",                     "\u0026"),
    ("apostrophe",                    "\u0027"),

    ("parenleft",                     "\u0028"),
    ("parenright",                    "\u0029"),
    ("asterisk",                      "\u002A"),
    ("plus",                          "\u002B"),
    ("comma",                         "\u002C"),
    ("minus",                         "\u002D"),
    ("period",                        "\u002E"),
    ("slash",                         "\u002F"),
    ("0",                             "\u0030"),
    ("1",                             "\u0031"),
    ("2",                             "\u0032"),
    ("3",                             "\u0033"),
    ("4",                             "\u0034"),
    ("5",                             "\u0035"),
    ("6",                             "\u0036"),
    ("7",                             "\u0037"),
    ("8",                             "\u0038"),
    ("9",                             "\u0039"),
    ("colon",                         "\u003A"),
    ("semicolon",                     "\u003B"),
    ("less",                          "\u003C"),
    ("equal",                         "\u003D"),
    ("greater",                       "\u003E"),
    ("question",                      "\u003F"),
    ("at",                            "\u0040"),
    ("A",                             "\u0041"),
    ("B",                             "\u0042"),
    ("C",                             "\u0043"),
    ("D",                             "\u0044"),
    ("E",                             "\u0045"),
    ("F",                             "\u0046"),
    ("G",                             "\u0047"),
    ("H",                             "\u0048"),
    ("I",                             "\u0049"),
    ("J",                             "\u004A"),
    ("K",                             "\u004B"),
    ("L",                             "\u004C"),
    ("M",                             "\u004D"),
    ("N",                             "\u004E"),
    ("O",                             "\u004F"),
    ("P",                             "\u0050"),
    ("Q",                             "\u0051"),
    ("R",                             "\u0052"),
    ("S",                             "\u0053"),
    ("T",                             "\u0054"),
    ("U",                             "\u0055"),
    ("V",                             "\u0056"),
    ("W",                             "\u0057"),
    ("X",                             "\u0058"),
    ("Y",                             "\u0059"),
    ("Z",                             "\u005A"),
    ("bracketleft",                   "\u005B"),
    ("backslash",                     "\u005C"),
    ("bracketright",                  "\u005D"),
    ("asciicircum",                   "\u005E"),
    ("underscore",                    "\u005F"),
    ("grave",                         "\u0060"),

    ("a",                             "\u0061"),
    ("b",                             "\u0062"),
    ("c",                             "\u0063"),
    ("d",                             "\u0064"),
    ("e",                             "\u0065"),
    ("f",                             "\u0066"),
    ("g",                             "\u0067"),
    ("h",                             "\u0068"),
    ("i",                             "\u0069"),
    ("j",                             "\u006A"),
    ("k",                             "\u006B"),
    ("l",                             "\u006C"),
    ("m",                             "\u006D"),
    ("n",                             "\u006E"),
    ("o",                             "\u006F"),
    ("p",                             "\u0070"),
    ("q",                             "\u0071"),
    ("r",                             "\u0072"),
    ("s",                             "\u0073"),
    ("t",                             "\u0074"),
    ("u",                             "\u0075"),
    ("v",                             "\u0076"),
    ("w",                             "\u0077"),
    ("x",                             "\u0078"),
    ("y",                             "\u0079"),
    ("z",                             "\u007A"),
    ("braceleft",                     "\u007B"),
    ("bar",                           "\u007C"),
    ("braceright",                    "\u007D"),
    ("asciitilde",                    "\u007E"),

    ("nobreakspace",                  "\u00A0"),
    ("exclamdown",                    "\u00A1"),
    ("cent",                          "\u00A2"),
    ("sterling",                      "\u00A3"),
    ("currency",                      "\u00A4"),
    ("yen",                           "\u00A5"),
    ("brokenbar",                     "\u00A6"),
    ("section",                       "\u00A7"),
    ("diaeresis",                     "\u00A8"),
    ("copyright",                     "\u00A9"),
    ("ordfeminine",                   "\u00AA"),
    ("guillemotleft",                 "\u00AB"),
    ("notsign",                       "\u00AC"),
    ("hyphen",                        "\u00AD"),
    ("registered",                    "\u00AE"),
    ("macron",                        "\u00AF"),
    ("degree",                        "\u00B0"),
    ("plusminus",                     "\u00B1"),
    ("twosuperior",                   "\u00B2"),
    ("threesuperior",                 "\u00B3"),
    ("acute",                         "\u00B4"),
    ("mu",                            "\u00B5"),
    ("paragraph",                     "\u00B6"),
    ("periodcentered",                "\u00B7"),
    ("cedilla",                       "\u00B8"),
    ("onesuperior",                   "\u00B9"),
    ("masculine",                     "\u00BA"),
    ("guillemotright",                "\u00BB"),
    ("onequarter",                    "\u00BC"),
    ("onehalf",                       "\u00BD"),
    ("threequarters",                 "\u00BE"),
    ("questiondown",                  "\u00BF"),
    ("Agrave",                        "\u00C0"),
    ("Aacute",                        "\u00C1"),
    ("Acircumflex",                   "\u00C2"),
    ("Atilde",                        "\u00C3"),
    ("Adiaeresis",                    "\u00C4"),
    ("Aring",                         "\u00C5"),
    ("AE",                            "\u00C6"),
    ("Ccedilla",                      "\u00C7"),
    ("Egrave",                        "\u00C8"),
    ("Eacute",                        "\u00C9"),
    ("Ecircumflex",                   "\u00CA"),
    ("Ediaeresis",                    "\u00CB"),
    ("Igrave",                        "\u00CC"),
    ("Iacute",                        "\u00CD"),
    ("Icircumflex",                   "\u00CE"),
    ("Idiaeresis",                    "\u00CF"),
    ("ETH",                           "\u00D0"),

    ("Ntilde",                        "\u00D1"),
    ("Ograve",                        "\u00D2"),
    ("Oacute",                        "\u00D3"),
    ("Ocircumflex",                   "\u00D4"),
    ("Otilde",                        "\u00D5"),
    ("Odiaeresis",                    "\u00D6"),
    ("multiply",                      "\u00D7"),
    ("Oslash",                        "\u00D8"),
    ("Ooblique",                      "\u00D8"),
    ("Ugrave",                        "\u00D9"),
    ("Uacute",                        "\u00DA"),
    ("Ucircumflex",                   "\u00DB"),
    ("Udiaeresis",                    "\u00DC"),
    ("Yacute",                        "\u00DD"),
    ("THORN",                         "\u00DE"),

    ("ssharp",                        "\u00DF"),
    ("agrave",                        "\u00E0"),
    ("aacute",                        "\u00E1"),
    ("acircumflex",                   "\u00E2"),
    ("atilde",                        "\u00E3"),
    ("adiaeresis",                    "\u00E4"),
    ("aring",                         "\u00E5"),
    ("ae",                            "\u00E6"),
    ("ccedilla",                      "\u00E7"),
    ("egrave",                        "\u00E8"),
    ("eacute",                        "\u00E9"),
    ("ecircumflex",                   "\u00EA"),
    ("ediaeresis",                    "\u00EB"),
    ("igrave",                        "\u00EC"),
    ("iacute",                        "\u00ED"),
    ("icircumflex",                   "\u00EE"),
    ("idiaeresis",                    "\u00EF"),
    ("eth",                           "\u00F0"),
    ("ntilde",                        "\u00F1"),
    ("ograve",                        "\u00F2"),
    ("oacute",                        "\u00F3"),
    ("ocircumflex",                   "\u00F4"),
    ("otilde",                        "\u00F5"),
    ("odiaeresis",                    "\u00F6"),
    ("division",                      "\u00F7"),
    ("oslash",                        "\u00F8"),
    ("ooblique",                      "\u00F8"),
    ("ugrave",                        "\u00F9"),
    ("uacute",                        "\u00FA"),
    ("ucircumflex",                   "\u00FB"),
    ("udiaeresis",                    "\u00FC"),
    ("yacute",                        "\u00FD"),
    ("thorn",                         "\u00FE"),
    ("ydiaeresis",                    "\u00FF"),
)

# Create a mapping from printable chars to keysyms
CHAR_KEYSYM = {c: k for k, c in KEYSYM_CHARS}

def to_keysyms(text):
    """
    Get a list fo keysyms corresponding to the given text.
    """

    try:
        return [CHAR_KEYSYM[c] for c in text]
    except KeyError as e:
        print("Error translating text to keysyms.")
        print("KeyError:", e)
        sys.exit(1)

def get_clipboard():
    """
    Get the text from the clipboard.
    """

    cmd = "xsel -o -b"
    try:
        proc = Popen(cmd, shell=True, stdout=PIPE)
        text = proc.stdout.read().decode("utf-8")
        proc.wait()
    except OSError as e:
        print("Error getting clipboard contnet.")
        print("OSError:", e)
        sys.exit(1)

    return text

def typeout(text):
    """
    Type out the given text using xdotool.
    """

    keysyms = to_keysyms(text)
    keysyms = " ".join(keysyms)

    cmd = "xdotool getwindowfocus key " + keysyms
    try:
        proc = Popen(cmd, shell=True)
        proc.wait()
    except OSError as e:
        print("Error running xdotool for typeout")
        print("OSError:", e)
        sys.exit(1)

def main():
    typeout(get_clipboard())

if __name__ == '__main__':
    main()
