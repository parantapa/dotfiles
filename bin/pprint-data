#!/usr/bin/env python2
"""
Print the pickle/yaml/json/msgpack file from stdin to stdout.
"""

from __future__ import print_function

import sys
import json
import codecs
from pprint import PrettyPrinter

# Make pprint support unicode
# http://stackoverflow.com/questions/10883399/unable-to-encode-decode-pprint-output
class MyPrettyPrinter(PrettyPrinter):
    def format(self, obj, context, maxlevels, level):
        if isinstance(obj, unicode):
            return (obj.encode('utf8'), True, False)
        return PrettyPrinter.format(self, obj, context, maxlevels, level)

_pprinter = MyPrettyPrinter(indent=4, depth=5)

def pprint(obj):
    try:
        _pprinter.pprint(obj)
    except IOError:
        sys.exit(0)

def process_yaml(fobj):
    import yaml
    pprint(yaml.load(fobj))

def process_pickle(fobj):
    import cPickle
    pprint(cPickle.load(fobj))

def process_json(fobj):
    for line in fobj:
        line = line.strip()
        if line:
            pprint(json.loads(line))

def process_msgpack(fobj):
    import msgpack
    unpacker = msgpack.Unpacker(fobj, encoding="utf-8")
    for obj in unpacker:
        pprint(obj)

def main():
    sys.stdout = codecs.getwriter('utf-8')(sys.stdout)

    if len(sys.argv) == 2:
        dtype, fname = sys.argv[1], "-"
    elif len(sys.argv) == 3:
        _, dtype, fname = sys.argv
    else:
        print("pprint-data - Pretty print data")
        print("Usage: pprint-data <dtype> [file]")
        sys.exit(1)

    try:
        process_fn = {
            "yaml"    : process_yaml,
            "pickle"  : process_pickle,
            "json"    : process_json,
            "msgpack" : process_msgpack,
        }[dtype]
    except KeyError:
        print("Unknown data type: ", dtype)
        sys.exit(1)

    # Open the file
    if fname == "-":
        fobj = sys.stdin
    else:
        fobj = open(fname, "rb")
    process_fn(fobj)

if __name__ == '__main__':
    main()
