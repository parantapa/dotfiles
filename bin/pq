#!/usr/bin/env python2
"""
Print the pickle file from stdin to stdout.
"""

import os
import fcntl
import termios
import struct
import sys
from cPickle import load
from pprint import pprint

def ioctl_GWINSZ(fd):
    """
    Get IOCTL win size.
    """

    try:
        cr = struct.unpack('hh', fcntl.ioctl(fd, termios.TIOCGWINSZ, '1234'))
        return cr
    except:
        return

def get_terminal_size():
    """
    Get the size of the terminal.

    Copied from:
    https://stackoverflow.com/questions/566746/how-to-get-console-window-width-in-python
    """

    cr = ioctl_GWINSZ(0) or ioctl_GWINSZ(1) or ioctl_GWINSZ(2)

    if not cr:
        try:
            fd = os.open(os.ctermid(), os.O_RDONLY)
            cr = ioctl_GWINSZ(fd)
            os.close(fd)
        except:
            pass

    if not cr:
        env = os.environ
        cr = (env.get('LINES', 25), env.get('COLUMNS', 80))

    return int(cr[1]), int(cr[0])

def main():
    if len(sys.argv) == 2:
        filter, fname = sys.argv[1], "-"
    elif len(sys.argv) == 3:
        _, filter, fname = sys.argv
    else:
        print("pq - Command line pickle processor")
        print("Usage: pq <pq filter> [file]")
        sys.exit(1)

    if fname == "-":
        x = sys.stdin
    else:
        x = open(fname, "rb")
    x = load(x)
    z = eval(filter, {"x": x})

    _, columns = get_terminal_size()
    try:
        pprint(z, indent=2, width=columns)
    except IOError:
        pass

if __name__ == '__main__':
    main()
