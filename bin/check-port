#!/usr/bin/env python3
"""Check if a port is open."""

import os
import sys
import time
import socket
import logging

RETRY = int(os.environ.get("RETRY", "12"))
RETRY_DELAY = int(os.environ.get("RETRY_DELAY", "5"))
SOCKET_TIMEOUT = int(os.environ.get("SOCKET_TIMEOUT", "3"))
LOG_LEVEL = os.environ.get("LOG_LEVEL", "INFO")

LOG = logging.getLogger(__name__)

def is_port_open(ip, port):
    """Check if a TCP port is open now."""
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    s.settimeout(SOCKET_TIMEOUT)
    try:
        s.connect((ip, port))
        s.shutdown(socket.SHUT_RDWR)
        return True
    except Exception: #pylint: disable=broad-except
        return False
    finally:
        s.close()

def check_port(ip, port):
    """Repeatedly check if the port is open."""
    isup = False
    for i in range(1, RETRY +1):
        LOG.debug("Try %d", i)
        if is_port_open(ip, int(port)):
            isup = True
            LOG.debug("Succeeded")
            break
        else:
            LOG.debug("Falied")
            time.sleep(RETRY_DELAY)
    return isup

def main():
    """Execute script."""
    logging.basicConfig(level=getattr(logging, LOG_LEVEL))

    try:
        _, ip, port = sys.argv
        port = int(port)
    except ValueError:
        print("Usage: check_port IP PORT")
        sys.exit(2)

    LOG.debug("RETRY: %d", RETRY)
    LOG.debug("RETRY_DELAY: %d", RETRY_DELAY)
    LOG.debug("SOCKET_TIMEOUT: %d", SOCKET_TIMEOUT)
    print("IP: ", ip)
    print("PORT: ", port)

    if check_port(ip, port):
        sys.exit(0)
    else:
        sys.exit(1)

if __name__ == "__main__":
    main()
