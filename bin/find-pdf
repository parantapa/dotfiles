#!/usr/bin/env python2.7
# encoding: utf-8
"""
Find an open a pdf file in $HOME_SDOCS.
"""

from __future__ import print_function

import os
import sys
from subprocess import Popen, PIPE

def find(sdocs, keyword):
    """
    Return the list of files with the given keyword.
    """

    cmd = ["find", sdocs, "-iname", "*{0}*.pdf".format(keyword)]
    proc = Popen(cmd, stdout=PIPE)
    out, _ = proc.communicate()
    if proc.returncode != 0 or out is None:
        return []

    fnames = out.strip().split("\n")
    fnames = [x.strip() for x in fnames]
    fnames = [x for x in fnames if x]
    return fnames

def main_show(sdocs, keyword):
    """
    Show the search results.
    """

    fnames = find(sdocs, keyword)
    if not fnames:
        print("No files found for pattern:", keyword)
        return

    for idx, line in enumerate(fnames, 1):
        print(idx, line)

def main_open(sdocs, keyword, num):
    """
    Open the given file.
    """

    fnames = find(sdocs, keyword)
    if not fnames:
        print("No files found for pattern:", keyword)
        return

    try:
        fname = fnames[num - 1]
    except IndexError:
        print("Invalid index:", num)
        print("Max index:", len(fnames))
        return

    fname = fname.strip()
    viewer = os.environ.get("PDFVIEWER", "evince").strip()
    cmd = [viewer, fname]
    with open(os.devnull, "wb") as null:
        Popen(cmd, stdout=null, stderr=null)

def main():
    sdocs = os.environ.get("HOME_SDOCS", None)
    if sdocs is None or not os.path.isdir(sdocs):
        print("Cant find sdocs directory!")
        return

    if len(sys.argv) == 2:
        keyword = sys.argv[1]
        main_show(sdocs, keyword)
    elif len(sys.argv) == 3:
        keyword = sys.argv[1]
        try:
            num = int(sys.argv[2])
        except ValueError:
            print("Invalid index:", sys.argv[2])
            return

        main_open(sdocs, keyword, num)
    else:
        print("Usage: find-pdf PATTERN [N]")

if __name__ == '__main__':
    main()
